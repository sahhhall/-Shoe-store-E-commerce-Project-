<%- include('../layouts/admin/header.ejs') -%>

<section class="d-flex justify-content-center align-items-center p-4">
  <div class="col col-md-8 col-lg-6 col-xxl-5">
    <h1 class="text-center fw-bold mb-5 fs-2">Update Coupon</h1>

    <% if (locals.messages.conflicts) { %>
    <div
      class="alert alert-danger d-flex align-items-center"
      role="alert"
      id="error-alert"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="24"
        fill="currentColor"
        class="bi bi-exclamation-triangle-fill flex-shrink-0 me-2"
        viewBox="0 0 16 16"
        role="img"
        aria-label="Warning:"
      >
        <path
          d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z"
        />
      </svg>
      <div>
        <strong>Sorry !</strong>
        <%= messages.conflicts %>
      </div>
    </div>
    <% } %>

    <form
      action="/admin/edit-coupon"
      method="post"
      onsubmit="return validateCoupon()"
    >
      <input hidden id="id" name="id" value="<%= coupon._id %>" />
      <div class="form-group">
        <label for="couponName">Coupon Name</label>
        <input
          type="text"
          class="form-control"
          id="couponName"
          name="couponName"
          value="<%= coupon.couponName%>"
        />
        <div id="couponNameError" style="display: none; color: red"></div>
      </div>
      <div class="form-group">
        <label for="discount">Discount Percntage</label>
        <input
          type="text"
          class="form-control"
          id="discount"
          name="discount"
          value="<%= coupon.discountAmount%>"
        />
        <div id="disError" style="display: none; color: red"></div>
      </div>
      <div class="form-group">
        <label for="amount">Criteria Amount</label>
        <input
          type="number"
          class="form-control"
          id="amount"
          name="criteriaAmount"
          value="<%= coupon.minAmount%>"
        />
        <div id="amountError" style="display: none; color: red"></div>
      </div>
      <div class="form-group">
        <label for="expiryDate">Expiry Date</label>
        <input
          type="date"
          class="form-control"
          id="expiryDate"
          name="expiryDate"
          value="<%= coupon.expiryDate.toISOString().split('T')[0] %>"
        />
        <div id="expiryDateError" style="display: none; color: red"></div>
      </div>
      <div class="form-group">
        <label for="usersLimit">Users Limit</label>
        <input
          type="number"
          class="form-control"
          id="usersLimit"
          name="usersLimit"
          value="<%= coupon.usersLimit%>"
        />
        <div id="usersLimitError" style="display: none; color: red"></div>
      </div>
      <button id="submitBtn" class="btn btn-primary mr-2">Submit</button>
      <a class="btn btn-inverse-danger" href="/admin/coupons">Cancel</a>
    </form>
  </div>
</section>
<script>
  function validateCoupon() {
    let couponName = document.getElementById("couponName").value.trim();
    let discount = document.getElementById("discount").value.trim();
    let criteriaAmount = document.getElementById("amount").value.trim();
    let usersLimit = document.getElementById("usersLimit").value.trim();
    let expiryDate = document.getElementById("expiryDate").value.trim();

    let couponNameError = document.getElementById("couponNameError");
    let disError = document.getElementById("disError");
    let amountError = document.getElementById("amountError");
    let usersLimitError = document.getElementById("usersLimitError");
    let expiryDateErr = document.getElementById("expiryDateError");
    let isValid = true;

    // Check if fields are empty
    if (couponName === "") {
      couponNameError.innerText = "Coupon name is required";
      couponNameError.style.display = "block";
      setTimeout(() => {
        couponNameError.style.display = "none";
      }, 5000);
      isValid = false;
    }
    if (couponCode === "") {
      couponCodeError.innerText = "Coupon code is required";
      couponCodeError.style.display = "block";
      setTimeout(() => {
        couponCodeError.style.display = "none";
      }, 5000);
      isValid = false;
    } else if (isNaN(couponCode) || couponCode < 1) {
      couponCodeError.innerText = "Coupon code must be a postive number";
      couponCodeError.style.display = "block";
      setTimeout(() => {
        couponCodeError.style.display = "none";
      }, 5000);
      isValid = false;
    }
    if (discount === "") {
      disError.innerText = "Discount code is required";
      disError.style.display = "block";
      setTimeout(() => {
        disError.style.display = "none";
      }, 5000);
      isValid = false;
    } else if (isNaN(discount) || discount < 1) {
      disError.innerText = "Discount percntage must be a postive value";
      disError.style.display = "block";
      setTimeout(() => {
        disError.style.display = "none";
      }, 5000);
      isValid = false;
    }
    if (criteriaAmount === "") {
      amountError.innerText = "Crieteria amount is required";
      amountError.style.display = "block";
      setTimeout(() => {
        amountError.style.display = "none";
      }, 5000);
      isValid = false;
    } else if (isNaN(criteriaAmount) || criteriaAmount < 0) {
      amountError.innerText = "Crieteria amount must be a postive value";
      amountError.style.display = "block";
      setTimeout(() => {
        amountError.style.display = "none";
      }, 5000);
      isValid = false;
    }
    if (usersLimit === "") {
      usersLimitError.innerText = "Users limit is required";
      usersLimitError.style.display = "block";
      setTimeout(() => {
        usersLimitError.style.display = "none";
      }, 5000);
      isValid = false;
    } else if (isNaN(usersLimit) || usersLimit < 0) {
      usersLimitError.innerText = "Users  list must be a postive value";
      usersLimitError.style.display = "block";
      setTimeout(() => {
        usersLimitError.style.display = "none";
      }, 5000);
      isValid = false;
    }
    let currentDate = new Date().toISOString().split("T")[0]; // Get current date in YYYY-MM-DD format
    if (expiryDate === "") {
      expiryDateErr.innerText = "Expiry date is required";
      expiryDateErr.style.display = "block";
      setTimeout(() => {
        expiryDateErr.style.display = "none";
      }, 5000);
      isValid = false;
    } else if (new Date(expiryDate) <= new Date(currentDate)) {
      expiryDateErr.innerText = "Invalid date";
      expiryDateErr.style.display = "block";
      setTimeout(() => {
        expiryDateErr.style.display = "none";
      }, 5000);
      isValid = false;
    }

    return isValid;
  }
  //      function setMinDate() {
  //         var currentDate = new Date().toISOString().split('T')[0]; // Get current date in YYYY-MM-DD format
  //         document.getElementById('expiryDate').min = currentDate;
  //     }
  //     window.onload = setMinDate;
</script>
<link
  rel="stylesheet"
  href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css"
/>
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
