<%- include('../layouts/admin/header.ejs') -%>

    <section class="d-flex justify-content-center align-items-center p-4">
      <div class="col col-md-8 col-lg-6 col-xxl-5">
    
          <h1 class="text-center fw-bold mb-5 fs-2">Edit product</h1>
  
          <!-- Your complete product addition form here -->
          <form action="/admin/edit-product" method="post" enctype="multipart/form-data"  onsubmit="return validateForm()">
            <input type="hidden" name="id" value="<%= productedit._id %>">
            <div class="form-group">
              <label for="product_title">Product Name</label>
              <input type="text" class="form-control" id="product_title" name="name" value="<%= productedit.name  %>" >
              <p id="productNameErr" style="color: red; display: none;"></p>
            </div>
  
            <div class="form-group">
              <label for="quantity">Quantity</label>
              <input  type="number" class="form-control" id="quantity" name="quantity" value="<%= productedit.stockQuantity  %>" >
              <p id="quantityErr" style="color: red; display: none;"></p>
            </div>
  
          
            <div class="form-group">
              <label>Category</label>
              <select class="form-control" id="product-category" name="category">
                <% for (let i = 0; i < categories.length; i++) { %>
                    <option value="<%= categories[i].name %>" <%= categories[i].name === productedit.category ? 'selected' : '' %>><%= categories[i].name %></option>
                <% } %>
            </select>
            
          </div>
          <div class="form-group">
            <label>Sizes</label>
            <% for (let i = 5; i <= 9; i++) { %>
                <div class="form-check">
                    <% if (productedit.sizes && productedit.sizes.includes(i)) { %>
                        <input class="form-check-input" type="checkbox" name="sizes" id="size<%= i %>" value="<%= i %>" checked>
                    <% } else { %>
                        <input class="form-check-input" type="checkbox" name="sizes" id="size<%= i %>" value="<%= i %>">
                    <% } %>
                    <label class="form-check-label" for="size<%= i %>">
                        <%= i %>
                    </label>
                </div>
            <% } %>
            <p id="sizeErr" style="color: red; display: none;"></p>
        </div>
        
          
            
            
            <div class="form-group">
              <label>Price</label>
              <input type="text" class="form-control" id="price" name="price" value="<%= productedit.price  %>" >
              <p id="priceErr" style="color: red; display: none;"></p>
            </div>
            
            <div class="form-group">
              <label>previous price</label>
              <input type="text" class="form-control" id="store_id" name="previous_price" value="<%= productedit.previous_price  %>" >
              <p id="previousErr" style="color: red; display: none;"></p>
            </div>
          
  
            
  
            <div class="form-group">
              <label>Description</label>
              <input type="text" class="form-control" rows="4" id="description" name="description" value="<%= productedit.description  %>" ></input>
              <p id="descErr" style="color: red; display: none;"></p>
            </div>
  
            
            <div class="form-group">
              <label>Product Images</label>
              <div class="row">
                <% for (let i = 1; i <= 4; i++) { %>
                  <div class="col-lg-6 col-md-6 mb-3 rounded-image-preview">
                    <label  class="image-label">Image <%= i %>
                      <div class="rounded-image-preview">
                        <img id="imagePreview<%= i %>" src="/assets/images/productImage/<%= productedit.images[i - 1] %>" alt="Preview">
                      </div>
                      <input  name="images" type="file" accept="image/*" id="imageInput<%= i %>" class="imageInput" onchange="previewImage(this, 'imagePreview<%= i %>')">
                    </label>
                  </div>
                <% } %>
              </div>
            </div>
  
            <div class="form-group mt-3">
              <button type="submit" class="btn btn-primary">Submit</button>
              <a href="/admin/products" class="btn btn-primary">
                <span class="text" >Back</span>
              </a>
            </div>
          </form>
        </div>
      
    </section>
  </div>
  

<%- include('../layouts/admin/footer.ejs') -%>
<script>
function validateForm() {
    let productName = document.getElementById('product_title').value.trim();
    let quantity = parseInt(document.getElementById('quantity').value.trim(), 10);
    let category = document.getElementById('product-category').value.trim();
    let price = parseInt(document.getElementById('price').value.trim(), 10);
    let storeId = parseInt(document.getElementById('store_id').value.trim(), 10);
    let description = document.getElementById('description').value.trim();
    let images = document.querySelectorAll('[name="images"]');
    let validImages = Array.from(images).some(img => img.value.trim() !== '');
    let sizes = document.querySelectorAll('[name="sizes"]:checked');
    let lettersRegex = /^[A-Za-z ]+$/;
    let  sameLettersRegex = /^(?!([a-zA-Z])\1+$)[a-zA-Z]+$/;
    let  numberRegex = /^[0-9]+$/;

    // Get the error paragraph elements
    let productNameErr = document.getElementById('productNameErr');
    let quantityErr = document.getElementById('quantityErr');
    let sizeErr = document.getElementById('sizeErr');
    let priceErr = document.getElementById('priceErr');
    let previousErr = document.getElementById('previousErr');
    let descErr = document.getElementById('descErr');

    if (!productName  || !category || !price || !storeId || !description) {
        Swal.fire({
          icon: 'error',
          text: 'Please fill out all fields'
        })
        return false;
    }

    if (!lettersRegex.test(productName) ||  !sameLettersRegex.test(productName)) {
        productNameErr.innerText = "Product name should contain only letters";
        productNameErr.style.display = "block";
        setTimeout(() => {
            productNameErr.style.display = "none";
        }, 5000);
        return false;
    }

    if (description.length <= 20 || !sameLettersRegex.test(description)) {
        descErr.innerText = "Please fill description with more than 20 letters";
        descErr.style.display = "block";
        setTimeout(() => {
            descErr.style.display = "none";
        }, 5000);
        return false;
    }

    if (quantity < 1) {
        quantityErr.innerText = "Minimum 1 product stock needed";
        quantityErr.style.display = "block";
        setTimeout(() => {
            quantityErr.style.display = "none";
        }, 5000);
        return false;
    }

    if (isNaN(quantity) || isNaN(price) || isNaN(storeId)) {
        Swal.fire({
          icon: 'error',
          text: 'Quantity, Price, and previous Price must be integers'
        })
        return false;
    }

    if (storeId < 100 || storeId > 25000 ||  price < 100 ||  price > 25000 || numberRegex.test(storeId) || numberRegex.test(price)) {
      if ( storeId < 100 ||  storeId > 25000 || !numberRegex.test(storeId)) {
        previousErr.innerText = "Previous price should be equal or more than 100 within 25000";
        previousErr.style.display = "block";
        setTimeout(() => {
            previousErr.style.display = "none";
        }, 5000);
        return false;
      } if ( price < 100 ||  price > 25000 || !numberRegex.test(price)) {
        priceErr.innerText = "Previous price should be equal or more than 100 within 25000";
        priceErr.style.display = "block";
        setTimeout(() => {
          priceErr.style.display = "none";
        }, 5000);
        return false;
      }
      
    }

    if ( price >= storeId) {
        previousErr.innerText = "Previous price should be equal or more than the current price";
        previousErr.style.display = "block";
        setTimeout(() => {
            previousErr.style.display = "none";
        }, 5000);
        return false;
    }

    if (sizes.length < 2) {
        sizeErr.innerText = "Please select at least two sizes";
        sizeErr.style.display = "block";
        setTimeout(() => {
            sizeErr.style.display = "none";
        }, 5000);
        return false;
    }
    
    return true;
}

       
//end
    function previewImage(input, imageId) {
        const preview = document.getElementById(imageId);
        const file = input.files[0];

        if (file) {
            const reader = new FileReader();

            reader.onload = function (e) {
                preview.src = e.target.result;
            };

            reader.readAsDataURL(file);
        } else {
            preview.src = "/assets/images/add Image.jpg";
        }
    }
</script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
