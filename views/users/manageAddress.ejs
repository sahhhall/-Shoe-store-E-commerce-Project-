
<%- include('../layouts/user/header.ejs') -%>
<style>
 

    .containerrr {
      display: flex;
      flex-wrap: wrap;
    }

    .sidebarrr {
      flex: 1;
      min-width: 20%;
      max-width: 25%;
      padding: 20px;
     
      color: #fff;
      min-height: 100vh;
    }

    .main-contenttt {
      flex: 3;
      padding: 20px;
    }hr{
        color:black;
    }

    .user-headerrr {
      display: flex;
      align-items: center;
      margin-bottom: 20px;
    }

    .user-photooo {
      border-radius: 50%;
      width: 40px;
      height: 40px;
      margin-right: 10px;
      /* Placeholder background color for the user photo */
      background-color: #ddd;
    }

    .user-nameee {
      font-size: .6rem;
      font-weight: bold;
    }

    .menu-headinggg {
      font-size: .7rem;
      font-weight: bold;
      margin-bottom: 10px;
      color: rgba(127,127,127,1);
    }

    .menu-itemmm {
      margin-bottom: 10px;

    }

    .menu-itemmm a {
     color: black;
      text-decoration: none;
      font-size: .9rem;
      font-family: 'Quicksand';
    }
    .menu-itemmm.selected {
  background-color: #f0f0f0;
  border-radius: 5px;
}   
/* its for dropdown in address  */
.droppdown {
            position: absolute;
            display: inline-block;
            left: 97%;
        }

        .droppdown-content {
          left:-107px;
            display: none;
            position: absolute;
            background-color: #f9f9f9;
            min-width: 30rem;
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
            z-index: 1;
            
        }

        .droppdown:hover .droppdown-content {
            display: block;
        }

        .droppdown-content .btn {
            color: black;
            padding: 12px 16px;
            text-decoration: none;
            display: block;
            
        }

        .droppdown-content .btn:hover {
            background-color: #f1f1f1;
            color: blue
            ;
        }
/* end dropdown  */
.addaddresbtn{
  font-weight: bolder;
  letter-spacing: .1rem;
}
.cardaddress{
  color: rgb(7, 7, 7);
            font-family: monospace;
}
    @media screen and (max-width: 600px) {
        .menu-itemmm a {
     color: black;
      text-decoration: none;
      font-size: .5rem;
    }    .droppdown-content {
          left:-157px;
            display: none;
            position: absolute;
            background-color: #f9f9f9;
            min-width: 30rem;
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
            z-index: 1;
            
        }.main-contenttt .breadcrumb{
          font-size: .6rem;
        }

}
  </style>
</head>
<body>

 
  <div class="containerrr" >
    <!-- Sidebar -->
    <div class="sidebarrr" id="sidebar">
 
      <div class="user-headerrr">
        <div class="user-photooo"></div>
        <div class="user-nameee">John Doe</div>
      </div>

      <!-- Sidebar Menu -->
      <div class="menu-headinggg">General</div>
  
      <div class="menu-itemmm"><a href="/addresses"  aria-current="page"  class="bg-light active" >Manage Address</a></div><hr>
     
      <div class="menu-itemmm" ><a href="/orders" >Orders</a></div><hr>

      <div class="menu-itemmm"><a href="/wishlist" >Wishlist</a></div><hr>

      <div class="menu-itemmm"><a href="/wallet" >Wallet</a></div><hr>


      <div class="menu-headinggg">Legal</div>
      <div class="menu-itemmm" ><a href="#">Terms of Use</a></div><hr>
      <div class="menu-itemmm"><a href="#">Privacy Policy</a></div><hr>

      <div class="menu-headinggg">Personal</div>
      <div class="menu-itemmm" ><a href="#">Report a Bug</a></div><hr>
      <div class="menu-itemmm" ><a  href="/signout">Logout</a></div><hr>

    </div>

    <!-- Main Content -->

    <!--  modal for new adrress -->
<div class="modal fade" id="AdressModal" tabindex="-1" aria-labelledby="AdressModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="AdressModalLabel">Add New Address</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form method="post">
          <div class="form-group">
            <label for="full-name" class="form-label">Full Name</label>
            <input type="text" class="form-control" id="full-name" placeholder="Full Name" name="fullname" required>
            <p style="color: red; display: none" id="full-nameErr"></p>
          </div>
          <div class="form-group">
            <label for="address-line1" class="form-label">Address Line 1</label>
            <input type="text" class="form-control" id="address-line1" placeholder="Address Line 1" name="address_line1" required>
            <p style="color: red; display: none" id="address-line1Err"></p>
          </div>
          <div class="form-group">
            <label for="city" class="form-label">City</label>
            <input type="text" class="form-control" id="city" placeholder="City" name="city" required>
            <p style="color: red; display: none" id="cityErr"></p>
          </div>
          <div class="form-group">
            <label for="state" class="form-label">State</label>
            <select class="form-select" id="state" name="state" required>
              <option value="" selected disabled>Select State</option>
             
              <option value="Kerala">Kerala</option>
              <option value="Tamilnadu">Tamilnadu</option>
              <option value="Karnataka">Karnataka</option>
              
              <option value="Maharashtra">Maharashtra</option>
            </select>
          </div>
          <div class="form-group">
            <label for="postcode" class="form-label">Postcode</label>
          
            <input type="text" class="form-control" id="postcode" placeholder="Postcode" name="postcode" required>
            <p style="color: red; display: none" id="postcodeErr"></p>
          </div>
          <div class="form-group">
            <label for="mobile-number" class="form-label">Mobile Number</label>
            <input type="tel" class="form-control" id="mobile-number" placeholder="Mobile Number" name="mobile_number" required>
            <p style="color: red; display: none" id="mobile-numberErr"></p>
          </div>

          <button type="button" onclick="addAddress('<%= locals.user.email %>')" class="btn btn-primary d-block w-100 my-4">Add Address</button>
        </form>
      </div>
    </div>
  </div>
</div>


 <!-- end modal for new adrress -->


<div class="main-contenttt">
  <nav class="d-none d-md-block">
    <ul class="list-unstyled d-flex justify-content-start mt-4 align-items-center fw-bolder small">
        <li class="me-4"><a class="nav-link-checkout" href="/">Home</a></li>
        <li class="me-4"><a class="nav-link-checkout" href="/profile">Profile</a></li>
        <li class="me-4"><a class="nav-link-checkout active aria-current" href="/addresses">Manage addresses</a></li>
    </ul>
</nav>

  <div id="edit-profile-section"  style="display: block;">
    
     <h1>User Addresses</h1>
     <div class="mt-2">
      <a data-bs-toggle="modal" data-bs-target="#AdressModal" class="btn btn-dark ms-3 mt-3 addaddresbtn"><i class="material-icons md-plus"></i> Add new Adress</a>
  </div>

<!-- modal for edut address -->
<div id="customModal" class="custom-modal bg-light" style="display: none; margin-top: 10px;  ">
  <div class="custom-modal-content">
 
    <h5 class="text-center ">  Edit Address</h5>
    <div class="modal-body">
      <form method="post" >
        <div class="form-group">
          <label for="full-name" class="form-label">Full Name</label>
          <input  class="form-control" id="fullnamedit" placeholder="Full Name" name="fullnameedit" required>
          <p id="fullNameError" style="color: red" class="error-message"></p>
        </div>
        <div class="form-group">
          <label for="address-line1" class="form-label">Address Line 1</label>
          <input type="text" class="form-control" id="addressedit" placeholder="Address Line 1" name="addressedit" required>
          <p id="addresseditError" style="color: red" class="error-message"></p>
        </div>
        <div class="form-group">
          <label for="city" class="form-label">City</label>
          <input type="text" class="form-control" id="cityedit" placeholder="City" name="cityedit" required>
          <p id="cityeditError" style="color: red" class="error-message"></p>
        </div>
        <div class="form-group">
          <label for="state" class="form-label">State</label>
          <select class="form-select" id="stateedit" name="stateedi" required>
            <option value="" selected disabled>Select State</option>
           
            <option value="Kerala">Kerala</option>
            <option value="Tamilnadu">Tamilnadu</option>
            <option value="Karnataka">Karnataka</option>
            
            <option value="Maharashtra">Maharashtra</option>
          </select>
        </div>
        <div class="form-group">
          <label for="postcode" class="form-label">Postcode</label>
          <input type="text" class="form-control" id="postcodeedit" placeholder="Postcode" name="postcodeedit" required>
          <p id="postcodeeditError" style="color: red" class="error-message"></p>
        </div>
        <div class="form-group">
          
          <input type="hidden" class="form-control" id="forid"  name="forid" required>
        </div>
        <div class="form-group">
          <label for="mobile-number" class="form-label">Mobile Number</label>
          <input  class="form-control" id="phoneedit" placeholder="Mobile Number" name="mobile_numberedit" required>
          <p id="phoneeditError" style="color: red;" class="error-message"></p>
        </div>
        <!-- this how i passed the input huidden fiels value for ajax/fetch pos  -->
        <button type="button" style="border: none; background-color: black; color: white; padding: 4px; font-size: small;"  onclick="editAddress(document.getElementById('forid').value)">Update</button>
        <button type="button" style="border: none; background-color: black; color: white; padding: 4px; font-size: small;">Close</button>
       
      </form>
    </div>
    <div class="modal-footer">
    
    </div>
  </div>
</div>
<!-- modal ended for edited address -->

     <!-- card start here address  -->
     <div class="card cardaddress mt-3" style="position: relative;" id="reloadArea">
      <% if(locals.addresses && locals.addresses.length>0 )  { %>

        <%  addresses.forEach(function(address){ %>
      <div class="card-body">
        <div class="droppdown">
     <img src="/assets/icons/three-dots-vertical.svg" alt="3dots">
          <div class="droppdown-content">
            <button class="btn btn-block dropdown-item" onclick="openCustomModal('<%= address._id %>','<%= address.name %>','<%= address.addressline %>','<%= address.city %>','<%= address.state %>','<%= address.pincode %>','<%= address.phone %>')" type="button">Edit</button>


            <button class="btn btn-block dropdown-item" onclick="removeAddress('<%= address._id %>')" >Remove</button>
          
          </div>
      </div>
     
       <p class="card-text"> <span > <%= address.name%></span> <span style="margin-left: 3%;"><%= address.phone %></span>  </p>
        <p class="card-text"><span><%= address.addressline %></span><span ><%= address.city %>,</span> <span><%= address.state %>-</span> <span><%= address.pincode %></span> </p>
    <hr>  </div>
      <% }); %>
      <%  } else  { %>
        <tr>
          <td colspan="5">No Addresses available</td>
        </tr>

      <% } %>
    </div>
   



  </div>
<!-- main sectin end (middle screen)  -->

    </div>
    <!-- main content screen end  -->
  </div>



<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>


  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

  
  <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
  

  <script>


// this functions for validating each add and edit ////////////////////////////
    function trimValue(elementId) {
        return document.getElementById(elementId).value.trim();
    }

    function setBorderColor(elementId, color) {
        document.getElementById(elementId).style.border = `1px solid ${color}`;
    }
    function err(errorField, error) {
        errorField.innerText = `${error} is required `;
        errorField.style.display = "block";
        setTimeout(() => {
          errorField.style.display = "none";
        }, 5000);
        isValid = false;
        return;
      }
      function validateField(value, fieldName, elementId) {
    const errorField = document.getElementById(`${elementId}Err`);

    if (value === "") {
        setBorderColor(elementId, 'red');
        err(errorField, fieldName);
        return true; // Validation failed
    }

    if (fieldName === 'Mobile Number') {
      if (!/^\d{10}$/.test(value) || /^(.)\1+$/.test(value) ) {
            setBorderColor(elementId, 'red');
            err(errorField, fieldName);
            return true; // Validation failed
        }
    } else if (fieldName === 'Full Name' || fieldName === 'City') {
        if (!/^[A-Za-z ]+$/.test(value)) {
            setBorderColor(elementId, 'red');
            err(errorField, fieldName);
            return true; // Validation failed
        }
    } else if (fieldName === 'address_line1') {
        if (!/^[A-Za-z\s]+$/.test(value)) {
            setBorderColor(elementId, 'red');
            err(errorField, fieldName);
            return true; // Validation failed
        }
    } else if (fieldName === 'Postcode') {
        if (!/^\d+$/.test(value)) {
            setBorderColor(elementId, 'red');
            err(errorField, fieldName);
            return true; // Validation failed
        }
    }

    setBorderColor(elementId, '');
    return false; // Validation passed
}
    function clearInputValues() {
        const fields = [
            'full-name',
            'address-line1',
            'city',
            'state',
            'postcode',
            'mobile-number'
        ];

        for (const fieldId of fields) {
            document.getElementById(fieldId).value = '';
        }
    }

    ///////////////
    function addAddress(userEmail) {
        const fields = [
            { id: 'full-name', name: 'Full Name' },
            { id: 'address-line1', name: 'address_line1' },
            { id: 'city', name: 'City' },
            { id: 'state', name: 'State' },
            { id: 'postcode', name: 'Postcode' },
            { id: 'mobile-number', name: 'Mobile Number' }
        ];

        for (const field of fields) {
            const value = trimValue(field.id);
            if (validateField(value, field.name, field.id)) {
                return;
            }
        }
        const fullName = document.getElementById('full-name').value;
        const addressLine = document.getElementById('address-line1').value;
        const city = document.getElementById('city').value;
        const state = document.getElementById('state').value;
        const postcode = document.getElementById('postcode').value;
        const  phone = document.getElementById('mobile-number').value;
        const data = {
          fullName:fullName,
          addressLine:addressLine,
          city:city,
          state:state,
          postcode:postcode,
          phone:phone,userEmail:userEmail
        }
    Swal.fire({
      title: 'Are you sure?',
      icon: 'warning',
      showCancelButton: true,
      confirmButtonColor: '#3085d6',
      cancelButtonColor: '#d33',
      confirmButtonText: 'Yes!',
    }).then((res) => {
      if (res.isConfirmed) {
        $.ajax({
          method: 'POST',
          url: '/add-address',
          data: JSON.stringify(data),
          contentType: 'application/json',
          success: function (response) {
            if (response.added === true) {
              Swal.fire({
                icon:'success',
                text:'Success'
              }).then(()=>{
                // $('#reloadArea').load('/addresses #reloadArea');
                location.reload()
                clearInputValues();
              })
              
        $('#AdressModal').modal('hide');
             
            } else {
             
              Swal.fire({
                    icon: 'error',
                  
                    text: 'Failed to edit profile. something went  wrong',
              }).then(()=>{
                // $('#reloadArea').load('/addresses #reloadArea');
                location.reload()
              })
            }
          },
          error: function (error) {
            console.error(error);
          },
        });
      }
    });
      
    }
</script>


<script>
   function openCustomModal(id, name, addressLine1, city, state, postcode, mobileNumber) {
 
    document.getElementById('forid').value=id;
    document.getElementById('fullnamedit').value = name;
    document.getElementById('addressedit').value = addressLine1;
    document.getElementById('cityedit').value = city;
    document.getElementById('stateedit').value = state;
    document.getElementById('postcodeedit').value = postcode;
    document.getElementById('phoneedit').value = mobileNumber;
    const modal = document.getElementById("customModal");
    modal.style.display = "block";
    const closeButton = modal.querySelector(".close-button");
    if (closeButton) {
      closeButton.addEventListener("click", function () {
        modal.style.display = "none";
      });
    }
  }



</script>
<script>

function removeAddress(Addid){
  const data ={
  Addid:Addid
}

$.ajax({
      method: 'POST',
          url: '/remove-addresses',
          data: JSON.stringify(data),
          contentType: 'application/json',
          success: function (response) {
            if (response.deleted === true) {
              Swal.fire({
                icon:'success',
                text:'address deleted'
              }).then(()=>{
              location.reload()
              })
             
           
            } else {
           
           
            }
          },
          error: function (error) {
            console.error(error);
          },
        });


  }




  // here we trying to eedit addreass with validation first we need to perfotm //////////////////////////////////

  function editAddress(addressid){
    
     const id =  document.getElementById('forid').value
     const fullName =   document.getElementById('fullnamedit').value 
    const address = document.getElementById('addressedit').value
    const city =  document.getElementById('cityedit').value
    const state =  document.getElementById('stateedit').value
    const post =   document.getElementById('postcodeedit').value
      const phone =  document.getElementById('phoneedit').value 
      const modal = document.getElementById("customModal");
      const fullNameError = document.getElementById('fullNameError');
      const addresseditError = document.getElementById('addresseditError');
      const cityeditError = document.getElementById('cityeditError');
      const postcodeeditError = document.getElementById('postcodeeditError');
      const phoneeditError = document.getElementById('phoneeditError');
        // Regular expressions for validation
    const lettersOnlyRegex = /^[A-Za-z]+$/;
    const numbersOnlyRegex = /^[0-9]+$/;

    let isValid = true;

    if (!fullName.match(lettersOnlyRegex)) {
    fullNameError.style.display = "block";
    fullNameError.innerText = "Full name should contain letters only.";
    isValid = false;
} else {
    fullNameError.style.display = "none";
}

// Validation for Address
if (!address.match(lettersOnlyRegex)) {
    addresseditError.style.display = "block";
    addresseditError.innerText = "Address should contain letters only.";
    isValid = false;
} else {
    addresseditError.style.display = "none";
}

// Validation for City
if (!city.match(lettersOnlyRegex)) {
    cityeditError.style.display = "block";
    cityeditError.innerText = "City should contain letters only.";
    isValid = false;
} else {
    cityeditError.style.display = "none";
}

// Validation for Postcode
if (!post.match(numbersOnlyRegex)) {
    postcodeeditError.style.display = "block";
    postcodeeditError.innerText = "Postcode should contain numbers only.";
    isValid = false;
} else {
    postcodeeditError.style.display = "none";
}

// Validation for Phone
if (!phone.match(numbersOnlyRegex)) {
    phoneeditError.style.display = "block";
    phoneeditError.innerText = "Phone should contain numbers only.";
    isValid = false;
} else if (phone.length !== 10 || /^(.)\1+$/.test(phone)) {
    phoneeditError.style.display = "block";
    phoneeditError.innerText = "Phone number should be 10 digits long and valid.";
    isValid = false;
} else {
    phoneeditError.style.display = "none";
}

if (!isValid) {
    // If any validation fails, return without making the AJAX call
    return;
}

const data ={
    id:id,
    fullName:fullName,
    address:address,
    city:city,
    state:state,
    post:post,
    phone :phone
}
$.ajax({
          method: 'POST',
          url: '/edit-addresses',
          data: JSON.stringify(data),
          contentType: 'application/json',
          success: function (response) {
            if (response.edited === true) {
              Swal.fire({
                icon:'success',
                text:'Successfully updated'
              }).then(()=>{
                location.reload()
              })
             
              modal.style.display = "none";
            } else {
            //  noting hereee because i only pass true 
           
            }
          },
          error: function (error) {
            console.error(error);
          },
        });


  }
</script>
<script>

    
</script>